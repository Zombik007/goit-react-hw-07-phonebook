{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","Phonebook/ContactForm.js","redux/contacts/contacts-selectors.js","Phonebook/FilterContact.js","Phonebook/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Phonebook/Phonebook.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSucces","fetchContactsError","addContactsRequest","addContactsSucces","addContactsError","deleteContactRequest","deleteContactSucces","deleteContactError","filterContact","axios","defaults","baseURL","data","dispatch","contacts","name","number","post","then","catch","error","id","delete","get","connect","onSubmit","contactsOperations","useState","setName","setNumber","inputChange","e","target","value","resetForm","className","styles","phonebook__form","preventDefault","phonebook__label","phonebook__input","type","pattern","title","required","onChange","phonebook__button_form","getFilter","state","filter","getFilteredContacts","createSelector","items","normalizeFilter","toLowerCase","contact","includes","contactsSelectors","contactsActions","onDeleteContact","fetchContacts","console","log","useEffect","phonebook__list","map","phonebook__item","phonebook__button","onClick","App","loading","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f128e0c5.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSucces = createAction('contacts/fetchContactsSucces');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSucces = createAction('contacts/addContactsSucces');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSucces = createAction('contacts/deleteContactSucces');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContact = createAction('contacts/Filter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSucces,\r\n  addContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSucces,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSucces(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = data => dispatch => {\r\n  const contacts = { name: data.name, number: data.number };\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post('/contacts', contacts)\r\n    .then(({ data }) => dispatch(addContactsSucces(data)))\r\n    .catch(error => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSucces(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../redux/contacts/contacts-operations';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Phonebook.module.css';\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const inputChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const formSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={styles.phonebook__form} onSubmit={formSubmit}>\r\n        <label className={styles.phonebook__label}>\r\n          Name\r\n          <input\r\n            className={styles.phonebook__input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={inputChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.phonebook__label}>\r\n          Number\r\n          <input\r\n            className={styles.phonebook__input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={inputChange}\r\n          />\r\n        </label>\r\n        <button className={styles.phonebook__button_form} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(contactsOperations.addContact(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\n// const getLoading = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  //   getLoading,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as contactsActions from '../redux/contacts/contacts-actions';\r\nimport contactsSelectors from '../redux/contacts/contacts-selectors';\r\n\r\nconst FilterContact = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        title=\"Search contacts\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.filterContact(e.target.value)),\r\n});\r\n\r\nFilterContact.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContact);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsOperations from '../redux/contacts/contacts-operations';\r\nimport contactsSelectors from '../redux/contacts/contacts-selectors';\r\n\r\nimport styles from './Phonebook.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact, fetchContacts }) => {\r\n  console.log(fetchContacts);\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  return (\r\n    <ul className={styles.phonebook__list}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li className={styles.phonebook__item} key={id}>\r\n            {name}: {number}\r\n            <button\r\n              className={styles.phonebook__button}\r\n              onClick={() => {\r\n                onDeleteContact(id);\r\n              }}\r\n            >\r\n              Delete contact\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport ContactForm from './Phonebook/ContactForm';\r\nimport FilterContact from './Phonebook/FilterContact';\r\nimport ContactList from './Phonebook/ContactList';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <FilterContact />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSucces,\r\n  addContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSucces,\r\n  fetchContactsError,\r\n  filterContact,\r\n} from './contacts-actions';\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSucces]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSucces]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSucces]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSucces]: (_, { payload }) => payload,\r\n  [addContactsSucces]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSucces]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\n// const contactsPersistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\nconst middleware = getDefaultMiddleware =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  });\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n//   },\r\n//   middleware,\r\n//   devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook__form\":\"Phonebook_phonebook__form__1igcX\",\"phonebook__label\":\"Phonebook_phonebook__label__3ZYz2\",\"phonebook__input\":\"Phonebook_phonebook__input__1sr24\",\"phonebook__button_form\":\"Phonebook_phonebook__button_form__2tEBq\",\"phonebook__list\":\"Phonebook_phonebook__list__2YFcY\",\"phonebook__item\":\"Phonebook_phonebook__item__39YSi\",\"phonebook__button\":\"Phonebook_phonebook__button__2g2L0\"};"],"sourceRoot":""}